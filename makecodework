<!DOCTYPE html>
<html>
<head><link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

</head>
<body>
<div>
<p id="demo"></p>
<p id="demo2"></p>
<p id="demo3"></p>
<div id="queryResults"></div>

<select id="key" class="col-xs-3 input-sm">
<option></option>
<option value="quantity"> Quantity</option>
<option value="tradeDate">Trade Date</option>
<option value="pricePerShare">Price Per Share</option>
<option value="security">Security Type</option>
</select>

<select id="operator" class="col-xs-3 input-sm">
<option></option>
<option value="equals">Equals</option>
<option value="isGreaterThan">Is Greater Than</option>
<option value="isLessThan">Is Less Than</option>
</select>
<input class="col-xs-3 input-sm" id="inputValue">
</div>



<button onclick = "compile()">compile<button>

<button onclick = " viewQueryResults()">viewQueryResults<button>
<script>

var transactionsDatabase = [
{tranId:1529, tradeDate: "10/14/2016", quantity: 1000.00, category: "cash", pricePerShare: 25.00, security: "equity"},
{tranId:5688,tradeDate: "10/17/2016", quantity: 1500.00, category: "cash", pricePerShare: 30.00, security: "bond"},
{tranId:9875,tradeDate: "10/18/2016", quantity: 5600.00, category: "other", pricePerShare: 40.00, security: "equity"},
{tranId:9854,tradeDate: "10/19/2016", quantity: 2000.00, category: "short", pricePerShare: 50.00, security: "equity"},
{tranId:6788,tradeDate: "10/20/2016", quantity: 4800.00, category: "short", pricePerShare: 15.00, security: "bond"},
{tranId:9764,tradeDate: "10/21/2016", quantity: 3000.00, category: "short", pricePerShare: 70.00, security: "equity"}
];

var Filter = function (transactionsDatabase)
{
this.transactionsDatabase = transactionsDatabase;
}


Filter.prototype = 
{
Matches: function(key, value)
    {
       var transactionsDatabase = [];
       for(var i in this.transactionsDatabase)
       {
          var transaction = this.transactionsDatabase[i];
          if(transaction[key] == value)
             {
                transactionsDatabase.push(transaction);
             }
       }
       return new Filter(transactionsDatabase);
   },
GreaterThan: function(key, value)
     {
        var transactionsDatabase = [];
        for(var i in this.transactionsDatabase)
        {
           var transaction = this.transactionsDatabase[i];
           if(transaction[key] > value)
             {
                transactionsDatabase.push(transaction);
             }
        }
  return new Filter(transactionsDatabase);
    },
LessThan: function(key, value)
    {
       var transactionsDatabase = [];
       for(var i in this.transactionsDatabase)
       {
          var transaction = this.transactionsDatabase[i];
          if(transaction[key] < value)
            {
               transactionsDatabase.push(transaction);
            }
       }
  return new Filter(transactionsDatabase);
   }
}

function selectKey() {
   var x = document.getElementById("key").value; document.getElementById("demo").innerHTML = x;
}
function selectOperator() {
    var x = document.getElementById("operator").value;
    document.getElementById("demo2").innerHTML = x;
}

function getInputValue(){

 var x = document.getElementById("inputValue").value;
document.getElementById("demo3").innerHTML = x;

}

function compile(){

selectKey();
selectOperator();
getInputValue();


}

var matches = new Filter(transactionsDatabase).Matches("security", "equity").GreaterThan("pricePerShare", 35).LessThan("pricePerShare", 50);

console.log(JSON.stringify(matches.transactionsDatabase));

function viewQueryResults(){

document.getElementById("queryResults").innerHTML= JSON.stringify(matches.transactionsDatabase);


}




</script>
</body>
</html>
